<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xdy.bitcoin.dao.BlockMapper">
    <resultMap id="BaseResultMap" type="com.xdy.bitcoin.po.Block">
        <id column="blockhash" jdbcType="CHAR" property="blockhash"/>
        <result column="confirmations" jdbcType="INTEGER" property="confirmations"/>
        <result column="timestamp" jdbcType="INTEGER" property="timestamp"/>
        <result column="height" jdbcType="INTEGER" property="height"/>
        <result column="txnumber" jdbcType="INTEGER" property="txnumber"/>
        <result column="difficulty" jdbcType="DOUBLE" property="difficulty"/>
        <result column="weight" jdbcType="INTEGER" property="weight"/>
        <result column="merkleroot" jdbcType="CHAR" property="merkleroot"/>
        <result column="version" jdbcType="VARCHAR" property="version"/>
        <result column="bits" jdbcType="INTEGER" property="bits"/>
        <result column="miner" jdbcType="VARCHAR" property="miner"/>
        <result column="size" jdbcType="INTEGER" property="size"/>
        <result column="nonce" jdbcType="INTEGER" property="nonce"/>
        <result column="txvolume" jdbcType="DOUBLE" property="txvolume"/>
        <result column="blockreward" jdbcType="DOUBLE" property="blockreward"/>
        <result column="feereward" jdbcType="DOUBLE" property="feereward"/>
    </resultMap>
    <sql id="Base_Column_List">
        blockhash, confirmations, timestamp, height, txnumber, difficulty, weight, merkleroot,
        version, bits, miner, size, nonce, txvolume, blockreward, feereward
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from block
        where blockhash = #{blockhash,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from block
        where blockhash = #{blockhash,jdbcType=CHAR}
    </delete>
    <insert id="insert" parameterType="com.xdy.bitcoin.po.Block">
        insert into block (blockhash, confirmations, timestamp,
        height, txnumber, difficulty,
        weight, merkleroot, version,
        bits, miner, size,
        nonce, txvolume, blockreward,
        feereward)
        values (#{blockhash,jdbcType=CHAR}, #{confirmations,jdbcType=INTEGER}, #{timestamp,jdbcType=INTEGER},
        #{height,jdbcType=INTEGER}, #{txnumber,jdbcType=INTEGER}, #{difficulty,jdbcType=DOUBLE},
        #{weight,jdbcType=INTEGER}, #{merkleroot,jdbcType=CHAR}, #{version,jdbcType=VARCHAR},
        #{bits,jdbcType=INTEGER}, #{miner,jdbcType=VARCHAR}, #{size,jdbcType=INTEGER},
        #{nonce,jdbcType=INTEGER}, #{txvolume,jdbcType=DOUBLE}, #{blockreward,jdbcType=DOUBLE},
        #{feereward,jdbcType=DOUBLE})
    </insert>
    <insert id="insertSelective" parameterType="com.xdy.bitcoin.po.Block">
        insert into block
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="blockhash != null">
                blockhash,
            </if>
            <if test="confirmations != null">
                confirmations,
            </if>
            <if test="timestamp != null">
                timestamp,
            </if>
            <if test="height != null">
                height,
            </if>
            <if test="txnumber != null">
                txnumber,
            </if>
            <if test="difficulty != null">
                difficulty,
            </if>
            <if test="weight != null">
                weight,
            </if>
            <if test="merkleroot != null">
                merkleroot,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="bits != null">
                bits,
            </if>
            <if test="miner != null">
                miner,
            </if>
            <if test="size != null">
                size,
            </if>
            <if test="nonce != null">
                nonce,
            </if>
            <if test="txvolume != null">
                txvolume,
            </if>
            <if test="blockreward != null">
                blockreward,
            </if>
            <if test="feereward != null">
                feereward,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="blockhash != null">
                #{blockhash,jdbcType=CHAR},
            </if>
            <if test="confirmations != null">
                #{confirmations,jdbcType=INTEGER},
            </if>
            <if test="timestamp != null">
                #{timestamp,jdbcType=INTEGER},
            </if>
            <if test="height != null">
                #{height,jdbcType=INTEGER},
            </if>
            <if test="txnumber != null">
                #{txnumber,jdbcType=INTEGER},
            </if>
            <if test="difficulty != null">
                #{difficulty,jdbcType=DOUBLE},
            </if>
            <if test="weight != null">
                #{weight,jdbcType=INTEGER},
            </if>
            <if test="merkleroot != null">
                #{merkleroot,jdbcType=CHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=VARCHAR},
            </if>
            <if test="bits != null">
                #{bits,jdbcType=INTEGER},
            </if>
            <if test="miner != null">
                #{miner,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                #{size,jdbcType=INTEGER},
            </if>
            <if test="nonce != null">
                #{nonce,jdbcType=INTEGER},
            </if>
            <if test="txvolume != null">
                #{txvolume,jdbcType=DOUBLE},
            </if>
            <if test="blockreward != null">
                #{blockreward,jdbcType=DOUBLE},
            </if>
            <if test="feereward != null">
                #{feereward,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xdy.bitcoin.po.Block">
        update block
        <set>
            <if test="confirmations != null">
                confirmations = #{confirmations,jdbcType=INTEGER},
            </if>
            <if test="timestamp != null">
                timestamp = #{timestamp,jdbcType=INTEGER},
            </if>
            <if test="height != null">
                height = #{height,jdbcType=INTEGER},
            </if>
            <if test="txnumber != null">
                txnumber = #{txnumber,jdbcType=INTEGER},
            </if>
            <if test="difficulty != null">
                difficulty = #{difficulty,jdbcType=DOUBLE},
            </if>
            <if test="weight != null">
                weight = #{weight,jdbcType=INTEGER},
            </if>
            <if test="merkleroot != null">
                merkleroot = #{merkleroot,jdbcType=CHAR},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=VARCHAR},
            </if>
            <if test="bits != null">
                bits = #{bits,jdbcType=INTEGER},
            </if>
            <if test="miner != null">
                miner = #{miner,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                size = #{size,jdbcType=INTEGER},
            </if>
            <if test="nonce != null">
                nonce = #{nonce,jdbcType=INTEGER},
            </if>
            <if test="txvolume != null">
                txvolume = #{txvolume,jdbcType=DOUBLE},
            </if>
            <if test="blockreward != null">
                blockreward = #{blockreward,jdbcType=DOUBLE},
            </if>
            <if test="feereward != null">
                feereward = #{feereward,jdbcType=DOUBLE},
            </if>
        </set>
        where blockhash = #{blockhash,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xdy.bitcoin.po.Block">
        update block
        set confirmations = #{confirmations,jdbcType=INTEGER},
        timestamp = #{timestamp,jdbcType=INTEGER},
        height = #{height,jdbcType=INTEGER},
        txnumber = #{txnumber,jdbcType=INTEGER},
        difficulty = #{difficulty,jdbcType=DOUBLE},
        weight = #{weight,jdbcType=INTEGER},
        merkleroot = #{merkleroot,jdbcType=CHAR},
        version = #{version,jdbcType=VARCHAR},
        bits = #{bits,jdbcType=INTEGER},
        miner = #{miner,jdbcType=VARCHAR},
        size = #{size,jdbcType=INTEGER},
        nonce = #{nonce,jdbcType=INTEGER},
        txvolume = #{txvolume,jdbcType=DOUBLE},
        blockreward = #{blockreward,jdbcType=DOUBLE},
        feereward = #{feereward,jdbcType=DOUBLE}
        where blockhash = #{blockhash,jdbcType=CHAR}
    </update>

    <select id="getblocks" resultMap="BaseResultMap">

        select * from block

    </select>


</mapper>